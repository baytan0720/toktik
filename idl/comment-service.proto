syntax = "proto3";
package comment;
option go_package = "comment";

enum Status {
  OK = 0;
  ERROR = 1;
}

message CommentInfo {
  int64 id = 1;           // 视频评论id
  UserInfo user =2;       // 评论用户信息
  string content = 3;     // 评论内容
  string create_date = 4; // 评论发布日期，格式 mm-dd
}q

message UserInfo {
  int64 id = 1;                // 用户id
  string name = 2;             // 用户名称
  int64 follow_count = 3;      // 关注总数
  int64 follower_count = 4;    // 粉丝总数
  bool is_follow = 5;          // true-已关注，false-未关注
  string avatar = 6;           //用户头像
  string background_image = 7; //用户个人页顶部大图
  string signature = 8;        //个人简介
  int64 total_favorited = 9;   //获赞数量
  int64 work_count = 10;       //作品数量
  int64 favorite_count = 11;   //点赞数量
}

message CreateCommentReq {
  int64 user_id = 1;  // 用户id
  int64 video_id = 2; // 视频id
  string content = 3; // 评论内容
}

message CreateCommentRes {
  Status status = 1;
  string err_msg = 2;
  CommentInfo comment = 3; // 评论信息
}

message DeleteCommentReq {
  int64 user_id = 1;    // 用户id
  int64 comment_id = 2; // 评论id
}

message DeleteCommentRes {
  Status status = 1;
  string err_msg = 2;
}

message ListCommentReq {
  int64 user_id = 1;  // 用户id
  int64 video_id = 2; // 视频id
}

message ListCommentRes {
  Status status = 1;
  string err_msg = 2;
  repeated CommentInfo comment_list = 3; // 评论列表
}

message GetCommentCountReq {
  int64 video_id = 1; // 视频id
}

message GetCommentCountRes {
  Status status = 1;
  string err_msg = 2;
  int64 count = 3; // 评论总数
}

service CommentService {
  rpc CreateComment(CreateCommentReq) returns (CreateCommentRes);
  rpc DeleteComment(DeleteCommentReq) returns (DeleteCommentRes);
  rpc ListComment(ListCommentReq) returns (ListCommentRes);
  rpc GetCommentCount(GetCommentCountReq) returns (GetCommentCountRes);
}